{
  "domain": "infinity_resolution",
  "difficulty": "easy",
  "test_type": "instruct_model_reasoning",
  "api_endpoint": "v1/chat/completions",
  "model_capability": "1B-7B",
  "tests": [
    {
      "id": "ir_easy_001",
      "category": "simple_infinite_series",
      "system_context": "You are managing a hotel with infinite rooms, all of which are full.",
      "instruction": "Design a check-in system that accommodates new guests in your fully-booked infinite hotel. How do you find rooms for a bus with infinite passengers?",
      "constraints": [
        "Hotel has infinite rooms",
        "All rooms are occupied",
        "New guests must be accommodated"
      ],
      "expected_reasoning_elements": [
        "Infinite set manipulation",
        "Room reassignment strategy",
        "Practical implementation"
      ],
      "scoring_criteria": {
        "mathematical_correctness": 0.4,
        "solution_clarity": 0.3,
        "practicality": 0.3
      }
    },
    {
      "id": "ir_easy_002",
      "category": "infinite_division",
      "system_context": "You are sharing a cake that can be divided infinitely many times.",
      "instruction": "Create a distribution system where infinite people each get a piece of one cake. How do you ensure everyone gets a fair share when the line never ends?",
      "constraints": [
        "Only one cake exists",
        "Infinite people need pieces",
        "Distribution must be fair"
      ],
      "expected_reasoning_elements": [
        "Infinite division strategy",
        "Fairness definition",
        "Distribution method"
      ],
      "scoring_criteria": {
        "mathematical_approach": 0.4,
        "fairness_achievement": 0.3,
        "clarity": 0.3
      }
    },
    {
      "id": "ir_easy_003",
      "category": "infinite_loop_management",
      "system_context": "You are managing a process that loops infinitely but needs to produce results.",
      "instruction": "Design a system that extracts useful output from an infinite loop without stopping it. How do you get answers from a process that never ends?",
      "constraints": [
        "Loop cannot be stopped",
        "Results are needed regularly",
        "Process is truly infinite"
      ],
      "expected_reasoning_elements": [
        "Partial result extraction",
        "Infinite process handling",
        "Output scheduling"
      ],
      "scoring_criteria": {
        "solution_effectiveness": 0.4,
        "infinite_handling": 0.3,
        "practicality": 0.3
      }
    },
    {
      "id": "ir_easy_004",
      "category": "infinite_queue",
      "system_context": "You are managing a service with an infinitely long customer queue.",
      "instruction": "Create a service system that handles infinite customers waiting. How do you ensure finite waiting times when the queue never ends?",
      "constraints": [
        "Queue is infinitely long",
        "Service time is finite",
        "Customers expect reasonable waits"
      ],
      "expected_reasoning_elements": [
        "Queue management strategy",
        "Service optimization",
        "Wait time calculation"
      ],
      "scoring_criteria": {
        "queue_handling": 0.4,
        "customer_satisfaction": 0.3,
        "mathematical_soundness": 0.3
      }
    },
    {
      "id": "ir_easy_005",
      "category": "infinite_storage",
      "system_context": "You are organizing a library that needs to store infinite books in finite space.",
      "instruction": "Design a storage system that fits infinite books in a finite building. How do you ensure every book remains accessible?",
      "constraints": [
        "Infinite books exist",
        "Space is finite",
        "All books must be accessible"
      ],
      "expected_reasoning_elements": [
        "Compression strategies",
        "Access mechanisms",
        "Physical impossibility handling"
      ],
      "scoring_criteria": {
        "creative_solution": 0.4,
        "accessibility": 0.3,
        "theoretical_approach": 0.3
      }
    }
  ]
}