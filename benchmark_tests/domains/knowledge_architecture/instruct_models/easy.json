{
  "domain": "knowledge_architecture",
  "difficulty": "easy",
  "test_type": "instruct_model_reasoning",
  "api_endpoint": "v1/chat/completions",
  "model_capability": "1B-7B",
  "tests": [
    {
      "id": "ka_easy_001",
      "category": "knowledge_organization",
      "system_context": "You are organizing a knowledge base where facts are connected in non-hierarchical ways.",
      "instruction": "Design a knowledge system where information isn't organized in trees or categories but in dynamic networks. How do you help users find information when there's no clear structure?",
      "constraints": [
        "No hierarchical organization",
        "Connections change based on context",
        "Users need to find information"
      ],
      "expected_reasoning_elements": [
        "Network organization",
        "Dynamic connections",
        "Navigation methods"
      ],
      "scoring_criteria": {
        "organization_effectiveness": 0.4,
        "accessibility": 0.3,
        "flexibility": 0.3
      }
    },
    {
      "id": "ka_easy_002",
      "category": "collective_knowledge",
      "system_context": "You are building a knowledge system where multiple people's understanding combines into collective knowledge.",
      "instruction": "Create a framework where individual knowledge pieces merge into collective understanding. How do you handle contradictions between different people's knowledge?",
      "constraints": [
        "Individual knowledge varies",
        "Collective knowledge must emerge",
        "Contradictions exist"
      ],
      "expected_reasoning_elements": [
        "Knowledge merging",
        "Contradiction handling",
        "Collective emergence"
      ],
      "scoring_criteria": {
        "merge_effectiveness": 0.4,
        "contradiction_resolution": 0.3,
        "collective_quality": 0.3
      }
    },
    {
      "id": "ka_easy_003",
      "category": "evolving_knowledge",
      "system_context": "You are managing a knowledge base where facts change over time as understanding evolves.",
      "instruction": "Design a system that tracks knowledge evolution while maintaining historical accuracy. How do you represent facts that were once true but are now false?",
      "constraints": [
        "Knowledge changes over time",
        "History must be preserved",
        "Current knowledge must be clear"
      ],
      "expected_reasoning_elements": [
        "Temporal tracking",
        "Version management",
        "Truth evolution"
      ],
      "scoring_criteria": {
        "temporal_handling": 0.4,
        "clarity": 0.3,
        "historical_preservation": 0.3
      }
    },
    {
      "id": "ka_easy_004",
      "category": "uncertain_knowledge",
      "system_context": "You are building a knowledge system that must represent different levels of certainty.",
      "instruction": "Create a framework for knowledge that ranges from absolutely certain to completely speculative. How do you help users make decisions based on uncertain knowledge?",
      "constraints": [
        "Certainty levels vary",
        "Decisions need knowledge",
        "Uncertainty must be clear"
      ],
      "expected_reasoning_elements": [
        "Certainty representation",
        "Decision support",
        "Uncertainty communication"
      ],
      "scoring_criteria": {
        "certainty_handling": 0.4,
        "decision_support": 0.3,
        "clarity": 0.3
      }
    },
    {
      "id": "ka_easy_005",
      "category": "distributed_knowledge",
      "system_context": "You are designing a system where complete knowledge exists but is distributed across many sources.",
      "instruction": "Create a knowledge architecture where no single source has complete information. How do you assemble full understanding from distributed partial knowledge?",
      "constraints": [
        "Knowledge is distributed",
        "No source is complete",
        "Full understanding needed"
      ],
      "expected_reasoning_elements": [
        "Distribution handling",
        "Knowledge assembly",
        "Completeness achievement"
      ],
      "scoring_criteria": {
        "assembly_effectiveness": 0.4,
        "completeness": 0.3,
        "efficiency": 0.3
      }
    }
  ]
}